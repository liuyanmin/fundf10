package com.lym.domain;

import io.swagger.annotations.ApiModelProperty;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import lombok.Data;
import lombok.ToString;
import lombok.experimental.Accessors;

/**
 * Table Name : t_fund_stock_re
 * Created by Tustrip Mybatis Generator on 2021/02/14
 */
@Data
@Accessors(chain = true)
@ToString
public class FundStockRe {
    @ApiModelProperty("主键ID")
    private Integer id;

    @ApiModelProperty("基金代码")
    private String fundCode;

    @ApiModelProperty("股票代码")
    private String stockCode;

    @ApiModelProperty("股票名称")
    private String stockName;

    @ApiModelProperty("最新日期，格式：yyyy-MM-dd")
    private String latestDate;

    @ApiModelProperty("序号")
    private Integer seqNo;

    @ApiModelProperty("占净值比例")
    private String percentage;

    @ApiModelProperty("持股数，单位：万股")
    private Float count;

    @ApiModelProperty("持仓市值，单位：万元")
    private Float fundMoney;

    @ApiModelProperty("添加时间")
    private LocalDateTime addTime;

    @ApiModelProperty("更新时间")
    private LocalDateTime updateTime;

    /**
     * This enum was generated by MyBatis Generator.
     * This enum corresponds to the database table t_fund_stock_re
     */
    public enum Column {
        id("id", "id", "INTEGER", false),
        fundCode("fund_code", "fundCode", "VARCHAR", false),
        stockCode("stock_code", "stockCode", "VARCHAR", false),
        stockName("stock_name", "stockName", "VARCHAR", false),
        latestDate("latest_date", "latestDate", "VARCHAR", false),
        seqNo("seq_no", "seqNo", "INTEGER", false),
        percentage("percentage", "percentage", "VARCHAR", false),
        count("count", "count", "REAL", false),
        fundMoney("fund_money", "fundMoney", "REAL", false),
        addTime("add_time", "addTime", "TIMESTAMP", false),
        updateTime("update_time", "updateTime", "TIMESTAMP", false);

        private static final String BEGINNING_DELIMITER = "\"";

        private static final String ENDING_DELIMITER = "\"";

        private final String column;

        private final boolean isColumnNameDelimited;

        private final String javaProperty;

        private final String jdbcType;

        public String value() {
            return this.column;
        }

        public String getValue() {
            return this.column;
        }

        public String getJavaProperty() {
            return this.javaProperty;
        }

        public String getJdbcType() {
            return this.jdbcType;
        }

        Column(String column, String javaProperty, String jdbcType, boolean isColumnNameDelimited) {
            this.column = column;
            this.javaProperty = javaProperty;
            this.jdbcType = jdbcType;
            this.isColumnNameDelimited = isColumnNameDelimited;
        }

        public String desc() {
            return this.getEscapedColumnName() + " DESC";
        }

        public String asc() {
            return this.getEscapedColumnName() + " ASC";
        }

        public static Column[] excludes(Column ... excludes) {
            ArrayList<Column> columns = new ArrayList<>(Arrays.asList(Column.values()));
            if (excludes != null && excludes.length > 0) {
                columns.removeAll(new ArrayList<>(Arrays.asList(excludes)));
            }
            return columns.toArray(new Column[]{});
        }

        public String getEscapedColumnName() {
            if (this.isColumnNameDelimited) {
                return new StringBuilder().append(BEGINNING_DELIMITER).append(this.column).append(ENDING_DELIMITER).toString();
            } else {
                return this.column;
            }
        }

        public String getAliasedEscapedColumnName() {
            return this.getEscapedColumnName();
        }
    }
}